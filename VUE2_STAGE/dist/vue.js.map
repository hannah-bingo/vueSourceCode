{"version":3,"file":"vue.js","sources":["../src/observe/array.js","../src/observe/index.js","../src/observe/watcher.js","../src/state.js","../src/compiler/parse.js","../src/compiler/index.js","../src/init.js","../src/index.js"],"sourcesContent":["// 希望重写数组中的部分方法\r\n\r\nlet oldArrayProto = Array.prototype;  // 获取数组的原型\r\n\r\n// Array.prototype.push = function () {\r\n\r\n// }\r\n\r\n// newArrayProto.__proto__ = oldArrayProto\r\nexport let newArrayProto = Object.create(oldArrayProto);\r\n\r\nlet methods = [   // 找到所有的变异方法\r\n    'push',\r\n    'pop',\r\n    'shift',\r\n    'unshift',\r\n    'reverse',\r\n    'sort',\r\n    'splice'\r\n]   // concat slice  都不会改变原数组\r\n\r\nmethods.forEach(method => {\r\n    // arr.push(1,2,3)\r\n    newArrayProto[method] = function(...args) {   // 这里重写了数组的方法\r\n        // push()\r\n       const result = oldArrayProto[method].call(this,...args);   // 内部调用原来的方法，函数的劫持，切片编程\r\n\r\n       // 对新增的数据再次进行劫持\r\n       let inserted;\r\n       let ob = this.__ob__;\r\n       // 需要对新增的数据再次进行劫持\r\n       switch(method) {\r\n        case 'push':\r\n        case 'unshift':\r\n            inserted = args;\r\n            break;\r\n        case 'splice':   // arr.splice(0,1 , {a:1}, {b:1})\r\n            inserted = args.slice(2)\r\n        default: \r\n            break;\r\n       }\r\n       \r\n    //    console.log(inserted);    // 新增的内容\r\n       if(inserted) {   // 对新增的内容再次进行观测\r\n        // 对新增的内容再次进行观测\r\n        ob.observeArray(inserted);\r\n       }\r\n       return result\r\n    } \r\n})","import { newArrayProto } from './array'\r\nclass Observer {\r\n    constructor(data) {\r\n        // debugger;\r\n        // Object.defineProperty只能劫持已经存在的属性（vue里面会为此单独写一些api $set $delete）\r\n        Object.defineProperty(data, '__ob__',{\r\n            value: this,\r\n            enumerable:false   // 将___ob__变成不可枚举（循环的时候无法获取到）\r\n        })\r\n        // data.__ob__ = this;\r\n        if(Array.isArray(data)) {\r\n            // 重写数组中的七个变异方法，可以修改数组本身的\r\n            // data.__proto__ = {    // 保留数组原有的特性，并且可以重写部分方法\r\n            //     push() {\r\n            //         console.log('重写的push');\r\n            //     }\r\n            // }\r\n            data.__proto__  = newArrayProto\r\n            // this.observerArray(data)    // 如果数组中存放的是对象，可以监控到对象的变化\r\n        } else {\r\n            this.walk(data)    \r\n        }\r\n        \r\n    }\r\n    walk(data) {  // 循环对象，对属性依次劫持\r\n        // \"重新定义\"属性\r\n        Object.keys(data).forEach(key => {\r\n           defineReactive(data,key,data[key]) \r\n        })\r\n    }\r\n    // observerArray(data) { //观测数组\r\n    //     data.forEach(item => observe(item))\r\n    // }\r\n}\r\n\r\n// 深层次嵌套会递归，递归多了性能差，不存在属性监控不到，属性\r\nfunction dependArray(value){\r\n    for(let i = 0; i<value.length; i++) {\r\n        let current = value[i]\r\n        current.__ob__.dep.depend();\r\n        if(Array.isArray(current)){\r\n            dependArray(current);\r\n        }\r\n    }\r\n}\r\n\r\nexport function defineReactive(target,key,value) {   // 闭包 属性劫持\r\n    let childOb = observe(value);   // 对所有的对象都进行属性劫持，childOb.dep用来收集依赖\r\n    let dep = new Dep();    // 每一个属性都有一个dep\r\n    observe(value);   // 对所有的对象都进行属性劫持\r\n    Object.defineProperty(target,key,{\r\n        get() { // 取值的时候会执行get\r\n            // console.log('用户取值了');\r\n            return value\r\n        },\r\n        set(newValue){\r\n            // console.log('用户设置值了');\r\n            if(newValue === value) return\r\n            observe(newValue)    // 对对象的值再次代理\r\n            value = newValue\r\n        }\r\n   }) \r\n}\r\nexport function observe(data) {\r\n    // debugger\r\n    // 对这个对象进行劫持\r\n    if(typeof data !== 'object' || data === null) {\r\n        return;  // 只对对象进行劫持\r\n    }\r\n    if(data.__ob__ instanceof Observer) {   // 说明这个对象被代理过了\r\n\r\n    }\r\n\r\n    // 如果一个对象被劫持了，那就不需要在被劫持了（判断一个对象是否被劫持过，可以增添一个实例，用实例来判断是否被劫持过）\r\n    return new Observer(data)\r\n}","import Dep from \"../../../up主源码/jiagouke5-vue-master/1.vue-render/src/observe/dep\";\r\n\r\nlet id = 0;\r\n\r\n// 1.有我们创建渲染watcher的时候会把当前的渲染watcher放在Dep.target上\r\n// 2. 调用_render()会取值走到get上\r\n// 每个属性有一个dep(属性就是被观察者)，watcher就是观察者(属性变化了会通知观察者来更新) -> 观察者模式\r\nclass Watcher{  // 不同组件有不同的watcher，目前只有一个渲染跟实例的\r\n    constructor(vm, fn, options){\r\n        this.id = id++;\r\n        this.renderWatcher = options;   // 是一个渲染watcher\r\n        this.getter = fn;   // getter意味着调用这个函数可以发生取值操作\r\n        this.deps = [];   // 后续我们实现计算属性，和一些清理工作需要用到\r\n        this.get();\r\n    }\r\n    addDep(dep){    // 一个组件 对应着多个属性 重复的属性也不用记录\r\n        let id = dep.id;\r\n        if(!this.depsId.has(id)) {\r\n            this.deps.push(dep);\r\n            this.depsId.add(id);\r\n            dep.addSub(this);    // watcher已经记住了dep了而且去重了，此时让dep也记住了watcher\r\n        }\r\n    }\r\n    get() {\r\n        if(this.lazy){\r\n            \r\n        }\r\n        Dep.target = this;   // 静态属性就是只有一份\r\n        this.getter();   // 回去vm上取值 vm._update(vm._render) 取name 和age\r\n        Dep.target = mull;   // 渲染完毕后就清空\r\n    }\r\n    update() {\r\n        queueWatcher(this);   // 把当前的watcher暂存起来\r\n        // this.get();  // 重新渲染\r\n    }\r\n    run() {\r\n        console.log('run');\r\n        this.get();\r\n    }\r\n} \r\nlet queue = [];\r\nlet has = {};\r\nfunction flushSchedulerQueue() {\r\n    let flushQueue = queue.slice(0)\r\n    queus = [];\r\n    has = {};\r\n    pending = false;\r\n    flushQueus.forEach(q => q.run());     // 在刷新的过程中可能还有新的watcher，重新放在queue中\r\n}\r\nfunction queueWatcher(watcher) {\r\n    const id = watcher.id;\r\n    if(!has[id]){\r\n        queue.push(watcher);\r\n        has[id] = true;\r\n        // 不管我们的update执行多少次，但是最终只执行一轮刷新操作\r\n        if(!pending){\r\n            setTimeout(flushSchedulerQueue, 0)\r\n            pending = true;\r\n        }\r\n    }\r\n}\r\n\r\nlet callbacks = [];\r\nlet waiting = false;\r\nfunction flushCallbacks() {\r\n    let cbs = callbacks.slice(0);\r\n    waiting = true;\r\n\r\n    callbacks = [];\r\n    cbs.forEach(cb => cb());\r\n}\r\n\r\n// nextTick没有直接使用某个api，而是采优雅降级的方式\r\n// 内部先采用的promise，MutationObserver 可以考虑ie专享的 setImmediate，setTimeout\r\nlet timerFunc;\r\nif(Promise) {\r\n    timerFunc = () => {\r\n        Promise.resolve.then(flushCallbacks)\r\n    }\r\n} else if(MutationObserver) {\r\n    let observe = new MutationObserver(flushCallbacks);    // 这里传入的回调时异步执行的\r\n    let textNode = ducument.createTextNode(1);\r\n    observer.observe(textNode, {\r\n        characterData: true\r\n    });\r\n    timerFunc = () => {\r\n        setImmediate()\r\n    }\r\n}else if(setImmediate) {\r\n    timerFunc = () => {\r\n        setImmediate(flushCallbacks);\r\n    }\r\n}else{\r\n    timerFunc = () => {\r\n        setImmediate(flushCallbacks);\r\n    }\r\n}\r\nexport function nextTick(cb){    // 先内部还是先用户的?\r\n    // console.log(cb);\r\n    callbacks.push(cb);\r\n    if(!waiting) {\r\n        setTimeout(() => {\r\n            flushCallbacks();  // 最后一起刷新\r\n        },0)\r\n        waiting = tru;\r\n    }\r\n}\r\n\r\n// 需要给每个属性增加一个dep，目的就是收集watcher\r\n// 一个视图中 有多少个属性(n个属性会对应一个视图)  n个dep对应一个watcher\r\n// 1个属性 对应多个组件  1个dep对应多个watcher\r\n// 多对多的关系\r\nexport default Watcher ","import { observe } from \"./observe/index\";\r\nimport Watcher, { nextTick } from './observe/watcher'\r\n\r\n// 初始化状态:watch,computed,\r\nexport function initState(vm) {\r\n    const opts = vm.$options   // 获取所有的选项\r\n    if(opts.data) {\r\n        initData(vm);\r\n    }\r\n}\r\n\r\nfunction initWatch(vm) {\r\n    let watch = vm.$options.watch;\r\n\r\n    for(let key in watch){\r\n        const handler = watch[key];    // 字符串，数组。函数\r\n        if(Array.isArray(handler)) {\r\n            for(let i = 0; i< handler.length; i++) {\r\n                createWatcher(vm, key, handler[i]);\r\n            }\r\n        }else {\r\n            createWatcher(vm,key, handler);\r\n        }\r\n    }\r\n}\r\nfunction proxy(vm, target, key) {\r\n    Object.defineProperty(vm, key, {  // vm.name\r\n        get() {\r\n            // console.log('ok');\r\n            return vm[target][key]  // vm._data.name\r\n        },\r\n        set(newValue) {\r\n            vm[target][key] = newValue\r\n        }\r\n    })\r\n}\r\n\r\nfunction initData(vm) {\r\n    let data = vm.$options.data;      //data可能是函数和对象\r\n    data = typeof data === 'function'? data.call(vm) : data;\r\n    // debugger\r\n    // console.log(data);\r\n\r\n    vm._data = data;\r\n    // 对数据进行劫持vue2 里采用了一个api defineProperty\r\n    observe(data)\r\n\r\n    // 将vm._data用来代理就可以了\r\n    for(let key in data) {\r\n        proxy(vm,'_data',key)\r\n    }\r\n}\r\n\r\nfunction initComputed(vm){\r\n    const computed = vm.$options.computed;\r\n    for(let key in computed){\r\n        let userDef = computed[key];\r\n        const getter = typeof userDef === 'function' ? userDef:userDef.get\r\n        const setter = userDef.set || (()=>{ })\r\n        defineComputed(target,key,userDef);\r\n    }\r\n}\r\nfunction defineComputed(target,key,userDef){\r\n    Object.defineProperty(target,key,{\r\n        get: getter,\r\n        set: setter\r\n    })\r\n}\r\nexport function initStateMixin(Vue) {\r\n    Vue.prototype.$nextTick = nextTick;\r\n    // 最终调用的都是这个方法\r\n    Vue.prototype.$watch = function (exprOrFn, cb) {\r\n        // firstname的值变化了，直接执行cb函数即可\r\n        new Watcher(this, exprOrFn, { user: true },cb)\r\n    }\r\n}","// html转换成ast树\r\nconst ncname = `[a-zA-Z_][\\\\-\\\\.0-9_a-zA-Z]*`;\r\nconst qnameCapture = `((?:${ncname}\\\\:)?${ncname})`;\r\nconst startTagOpen = new RegExp(`^<${qnameCapture}`); // 他匹配到的分组是一个 标签名  <xxx 匹配到的是开始 标签的名字\r\nconst endTag = new RegExp(`^<\\\\/${qnameCapture}[^>]*>`);  // 匹配的是</xxxx>  最终匹配到的分组就是结束标签的名字\r\nconst attribute = /^\\s*([^\\s\"'<>\\/=]+)(?:\\s*(=)\\s*(?:\"([^\"]*)\"+|'([^']*)'+|([^\\s\"'=<>`]+)))?/;  // 匹配属性\r\n// 第一个分组就是属性的key value 就是 分组3/分组4/分组五\r\nconst startTagClose = /^\\s*(\\/?)>/;  // <div> <br/>\r\nconst defaultTagRE = /\\{\\{((?:.|\\r?\\n)+?)\\}}/g;  //{{ dfdf }}\r\n\r\n// vue3采用的不是使用正则\r\nexport function parseHTML(html) {   // html最开始肯定是一个</div>\r\n    const ELEMENT_TYPE = 1;\r\n    const TEXT_TYPE = 3;\r\n    const stack = [];   // 用来存放元素的\r\n    let currentParent;   // 指向的是栈中的最后一个\r\n\r\n    // 最终需要转换为一颗抽象语法树\r\n    function createASTElement(tag,attrs) {\r\n        return {\r\n            tag,\r\n            type: ELEMENT_TYPE,\r\n            children: [],\r\n            attrs,\r\n            parent: null\r\n        }\r\n    }\r\n    function start(tag,attrs) {\r\n        let node = createASTElement(tag, attrs);   // 创建一个ast节点\r\n        if(!root) {// 看一下是否是空数\r\n            root = node   // 如果为空则当前是树的根节点\r\n        }\r\n        if(currentParent) {\r\n            node.parent = currentParent;\r\n            currentParent.children.push(node)\r\n        }\r\n        stack.push(node)\r\n        currentParent = node;  // currentParent为战中的最后一个\r\n    }\r\n    function chars(text){    // 文本直接放在当前指向的节点中\r\n        text = text.replace(/\\s/g,'')\r\n        text && currentParent.children.push({\r\n            type: TEXT_TYPE,\r\n            text,\r\n            parent: currentParent\r\n        })\r\n    }\r\n    function end(tag){\r\n        let node = stack.pop();   // 弹出最后一个，校验标签是否合法\r\n        currentParent = stack[stack.lemgth - 1];\r\n    }\r\n    function advance(n){\r\n        html = html.substring(n)\r\n    }\r\n    function parseStartTag() {\r\n        const start = html.match(startTagOpen);\r\n        if(start){\r\n            const match = {\r\n                tagName: start[1],   // 标签名\r\n                attrs: []\r\n            }\r\n            advance(start[0].length);\r\n            // console.log(match,html);\r\n            // 如果不是开始标签的结束，就一直匹配下去\r\n            let attr,end\r\n            while(!(end = html.match(startTagClose)) && (attr = html.match(attribute))) {\r\n                advance(attr[0].length)\r\n                match.attrs.push({name:attr[1],value:attr[3] || attr[4] || attr[5]})\r\n            }\r\n            if(end) {\r\n                advance(end[0].length)\r\n            }\r\n            return match;\r\n        }\r\n        return false;  // 不是开始标签\r\n    }\r\n    while(html) {\r\n        // 如果textENd为0，说明一个开始标签或者结束标签\r\n        // 如果textEnd > 0 说明就是文本的结束位置\r\n        let textEnd = html.indexOf('<');   // 如果indexof中的索引是0，则说明是个标签\r\n\r\n        if(textEnd == 0) {\r\n            const startTagMatch = parseStartTag();   // 开始标签的匹配结果\r\n\r\n            if(startTagMatch) {\r\n                start(startTagMatch.tagName,startTagMatch.attrs)\r\n                // console.log(html);\r\n                continue\r\n            }\r\n\r\n            let endTagMatch = html.match(endTag)\r\n            if(endTagMatch){\r\n                advance(endTagMatch[0].length);\r\n                continue;\r\n            }\r\n        }\r\n        if(textEnd > 0) {\r\n            let text = html.substring(0, textEnd);   // 文本内容\r\n            if(text) {\r\n                chars(text);\r\n                advance(text.length);     // 解析到的文本\r\n                // console.log(html);\r\n            } \r\n            break;\r\n        }\r\n    }\r\n    console.log(html);\r\n    return root;\r\n}\r\n","import { parseHTML } from './parse'\r\n\r\nfunction genProps(attrs) {\r\n    let str = ''  // {name,value}\r\n    for(let i = 0; i < attrs.length; i++) {\r\n        let attr = attrs[i];\r\n        if(attr.name === 'style') {\r\n            let obj = {};\r\n            attr.value.split(';').forEach(item => {\r\n                let [key, value] = item.split(':');\r\n                obj[key] = value;\r\n            })\r\n            attr.value = obj;\r\n        }\r\n\r\n        str += `${attr.name}:${JSON.stringify(attr.value)},`\r\n    }\r\n    return `{${str.slice(0, -1)}}`\r\n}\r\n\r\nfunction gen(node) {\r\n    \r\n}\r\nfunction genChildren(el){\r\n    const children = el.children;\r\n    if(children) {\r\n        return children.map(item => genChildren(child).join(','))\r\n    }\r\n}\r\nfunction codegen(ast){\r\n    let children = genChildren(ast);\r\n    let code = (`\r\n        _c('${ast.tag}',${\r\n            ast.attrs.length > 0 ? genProps(ast.attrs) : 'null'\r\n        }${\r\n            ast.children.length ? `,${children}`:''\r\n        }\r\n    )`)\r\n    return code;\r\n}\r\nexport function compileToFunction(template) {\r\n    // 1. 将template转化为ast语法树\r\n    let ast = parseHTML(template);\r\n    // 2. 生成render方法(render方法执行后的返回结果就是 虚拟DOM)\r\n    let code = codegen(ast);\r\n    code = `with(this){return ${code}}`;\r\n    let render = new Function(code);   // 根据代码生成render函数\r\n    console.log(render.toString());\r\n    // render(h) {\r\n    //     return _c('div',{id: 'app'}, _c('div',{style: {color:'red'}}, _v(_s(name)+'hello'),_c('span',undefined,_v(_s(age)))))\r\n    // } \r\n\r\n    // // 模板引擎的实现原理，就是with + new Function\r\n    // function render(){\r\n    //     with(this){ return _c }\r\n    // }\r\n    // render.call(vm);\r\n    return render\r\n}\r\n","import { initState } from \"./state\";\r\nimport { compileToFunction } from './compiler/index'\r\n\r\nexport function initMixin(Vue){         // 就是给Vue增加init方法的\r\n    Vue.prototype._init = function(options) {         // 用于初始化操作\r\n        // vue  vm.$options 就是获取用户的配置\r\n        // 我们使用的vue的时候，$nextTick $data $attr\r\n        const vm = this;\r\n        this.$options =  options   // 将用户的选项挂载到实例上\r\n\r\n        // 初始化状态:watch,computed,\r\n        initState(vm);\r\n\r\n        if(options.el) {\r\n            vm.$mount(options.el);    // 实现数据的挂载\r\n        }\r\n    }\r\n    Vue.prototype.$mount = function(el) {\r\n        const vm = this;\r\n        el = document.querySelector(el);\r\n        let ops = vm.$options;\r\n        if(!ops.render) {  // 先进行查找有没有render函数\r\n            let template;   // 没有render看一下是否写了tempate，没写template采用外部的template\r\n            if(!ops.template && el) {   // 没有写模板，但是写了el\r\n                template = el.outerHTML\r\n            }else {\r\n                if(el){\r\n                    template = ops.template;   // 如果el，则采用模板的内容\r\n                }\r\n            }\r\n            // 写了template，就用写了的template\r\n            // console.log(template);\r\n            if(template && el) {\r\n                // 对模板进行编译\r\n                const render = compileToFunction(template)\r\n                ops.render = render;  // jsx最终会被编译成h('xxx')\r\n            }\r\n        }\r\n\r\n        mountComponent(vm, el);     // 组件的挂载\r\n        // 最终就可以获取render方法\r\n        // script 标签引用的vue.global.js这个编译过程实在浏览器运行的\r\n        // runtime是不包含模板编译的，整个编译是打包的时候通过loader来转义.vue文件的，用runtime的时候不能使用template\r\n    }\r\n    ops.render;   // 最终就可以获取render方法\r\n}\r\n\r\n","import {initMixin} from './init'\r\nimport Watcher from './observe/watcher';\r\n\r\n// 将所有的方法都耦合在一起\r\nfunction Vue(options) {\r\n    // debugger\r\n    // options就是用户的选项\r\n    this._init(options)\r\n}\r\n\r\ninitMixin(Vue);    // 扩展了init方法\r\ninit();\r\n\r\n// 最终调用的都是这个方法\r\nVue.prototype.$watch = function(exprOrFn,cb, options = {}) {\r\n    console.log(exprOrFn,cb,options);\r\n    // first\r\n    new Watcher(this,exprOrFn,{user:true},cb)\r\n}\r\nexport default Vue"],"names":["oldArrayProto","Array","prototype","newArrayProto","Object","create","methods","forEach","method","args","result","call","inserted","ob","__ob__","slice","observeArray","Observer","data","defineProperty","value","enumerable","isArray","__proto__","walk","keys","key","defineReactive","target","observe","Dep","get","set","newValue","id","Watcher","vm","fn","options","renderWatcher","getter","deps","dep","depsId","has","push","add","addSub","lazy","mull","queueWatcher","console","log","flushSchedulerQueue","queus","pending","flushQueus","q","run","watcher","setTimeout","callbacks","flushCallbacks","cbs","cb","Promise","MutationObserver","textNode","ducument","createTextNode","observer","characterData","setImmediate","initState","opts","$options","initData","proxy","_data","ncname","qnameCapture","startTagOpen","RegExp","endTag","attribute","startTagClose","parseHTML","html","ELEMENT_TYPE","TEXT_TYPE","currentParent","createASTElement","tag","attrs","type","children","parent","start","node","root","chars","text","replace","advance","n","substring","parseStartTag","match","tagName","length","attr","end","name","textEnd","indexOf","startTagMatch","endTagMatch","genProps","str","i","obj","split","item","JSON","stringify","genChildren","el","map","child","join","codegen","ast","code","compileToFunction","template","render","Function","toString","initMixin","Vue","_init","$mount","document","querySelector","ops","outerHTML","mountComponent","init","$watch","exprOrFn","user"],"mappings":"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"}